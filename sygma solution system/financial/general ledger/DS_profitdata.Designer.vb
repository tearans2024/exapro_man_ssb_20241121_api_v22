'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.5420
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DS_profitdata"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DS_profitdata
    Inherits Global.System.Data.DataSet
    
    Private tablepl_setting_mstr As pl_setting_mstrDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("pl_setting_mstr")) Is Nothing) Then
                MyBase.Tables.Add(New pl_setting_mstrDataTable(ds.Tables("pl_setting_mstr")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property pl_setting_mstr() As pl_setting_mstrDataTable
        Get
            Return Me.tablepl_setting_mstr
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DS_profitdata = CType(MyBase.Clone,DS_profitdata)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("pl_setting_mstr")) Is Nothing) Then
                MyBase.Tables.Add(New pl_setting_mstrDataTable(ds.Tables("pl_setting_mstr")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablepl_setting_mstr = CType(MyBase.Tables("pl_setting_mstr"),pl_setting_mstrDataTable)
        If (initTable = true) Then
            If (Not (Me.tablepl_setting_mstr) Is Nothing) Then
                Me.tablepl_setting_mstr.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DS_profitdata"
        Me.Prefix = ""
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablepl_setting_mstr = New pl_setting_mstrDataTable
        MyBase.Tables.Add(Me.tablepl_setting_mstr)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializepl_setting_mstr() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DS_profitdata = New DS_profitdata
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub pl_setting_mstrRowChangeEventHandler(ByVal sender As Object, ByVal e As pl_setting_mstrRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class pl_setting_mstrDataTable
        Inherits Global.System.Data.DataTable
        Implements Global.System.Collections.IEnumerable
        
        Private columnpl_oid As Global.System.Data.DataColumn
        
        Private columnpl_footer As Global.System.Data.DataColumn
        
        Private columnpl_sign As Global.System.Data.DataColumn
        
        Private columnpl_number As Global.System.Data.DataColumn
        
        Private columnpls_oid As Global.System.Data.DataColumn
        
        Private columnpls_item As Global.System.Data.DataColumn
        
        Private columnpls_number As Global.System.Data.DataColumn
        
        Private columnpla_ac_id As Global.System.Data.DataColumn
        
        Private columnac_code As Global.System.Data.DataColumn
        
        Private columnac_name As Global.System.Data.DataColumn
        
        Private columnpla_ac_hirarki As Global.System.Data.DataColumn
        
        Private columnv_pst As Global.System.Data.DataColumn
        
        Private columnv_jbr As Global.System.Data.DataColumn
        
        Private columnv_jkt As Global.System.Data.DataColumn
        
        Private columnv_jatim As Global.System.Data.DataColumn
        
        Private columnv_jateng As Global.System.Data.DataColumn
        
        Private columnv_lmpng As Global.System.Data.DataColumn
        
        Private columnv_bntn As Global.System.Data.DataColumn
        
        Private columnv_mdn As Global.System.Data.DataColumn
        
        Private columnv_plmbng As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "pl_setting_mstr"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pl_oidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpl_oid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pl_footerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpl_footer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pl_signColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpl_sign
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pl_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpl_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pls_oidColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpls_oid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pls_itemColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpls_item
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pls_numberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpls_number
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pla_ac_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpla_ac_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ac_codeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnac_code
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ac_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnac_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property pla_ac_hirarkiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpla_ac_hirarki
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property v_pstColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnv_pst
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property v_jbrColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnv_jbr
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property v_jktColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnv_jkt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property v_jatimColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnv_jatim
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property v_jatengColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnv_jateng
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property v_lmpngColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnv_lmpng
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property v_bntnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnv_bntn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property v_mdnColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnv_mdn
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property v_plmbngColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnv_plmbng
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As pl_setting_mstrRow
            Get
                Return CType(Me.Rows(index),pl_setting_mstrRow)
            End Get
        End Property
        
        Public Event pl_setting_mstrRowChanging As pl_setting_mstrRowChangeEventHandler
        
        Public Event pl_setting_mstrRowChanged As pl_setting_mstrRowChangeEventHandler
        
        Public Event pl_setting_mstrRowDeleting As pl_setting_mstrRowChangeEventHandler
        
        Public Event pl_setting_mstrRowDeleted As pl_setting_mstrRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub Addpl_setting_mstrRow(ByVal row As pl_setting_mstrRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function Addpl_setting_mstrRow( _
                    ByVal pl_oid As String,  _
                    ByVal pl_footer As String,  _
                    ByVal pl_sign As String,  _
                    ByVal pl_number As String,  _
                    ByVal pls_oid As String,  _
                    ByVal pls_item As String,  _
                    ByVal pls_number As String,  _
                    ByVal pla_ac_id As Integer,  _
                    ByVal ac_code As String,  _
                    ByVal ac_name As String,  _
                    ByVal pla_ac_hirarki As String,  _
                    ByVal v_pst As Decimal,  _
                    ByVal v_jbr As String,  _
                    ByVal v_jkt As String,  _
                    ByVal v_jatim As String,  _
                    ByVal v_jateng As String,  _
                    ByVal v_lmpng As String,  _
                    ByVal v_bntn As String,  _
                    ByVal v_mdn As String,  _
                    ByVal v_plmbng As String) As pl_setting_mstrRow
            Dim rowpl_setting_mstrRow As pl_setting_mstrRow = CType(Me.NewRow,pl_setting_mstrRow)
            Dim columnValuesArray() As Object = New Object() {pl_oid, pl_footer, pl_sign, pl_number, pls_oid, pls_item, pls_number, pla_ac_id, ac_code, ac_name, pla_ac_hirarki, v_pst, v_jbr, v_jkt, v_jatim, v_jateng, v_lmpng, v_bntn, v_mdn, v_plmbng}
            rowpl_setting_mstrRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowpl_setting_mstrRow)
            Return rowpl_setting_mstrRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function GetEnumerator() As Global.System.Collections.IEnumerator Implements Global.System.Collections.IEnumerable.GetEnumerator
            Return Me.Rows.GetEnumerator
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As pl_setting_mstrDataTable = CType(MyBase.Clone,pl_setting_mstrDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New pl_setting_mstrDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnpl_oid = MyBase.Columns("pl_oid")
            Me.columnpl_footer = MyBase.Columns("pl_footer")
            Me.columnpl_sign = MyBase.Columns("pl_sign")
            Me.columnpl_number = MyBase.Columns("pl_number")
            Me.columnpls_oid = MyBase.Columns("pls_oid")
            Me.columnpls_item = MyBase.Columns("pls_item")
            Me.columnpls_number = MyBase.Columns("pls_number")
            Me.columnpla_ac_id = MyBase.Columns("pla_ac_id")
            Me.columnac_code = MyBase.Columns("ac_code")
            Me.columnac_name = MyBase.Columns("ac_name")
            Me.columnpla_ac_hirarki = MyBase.Columns("pla_ac_hirarki")
            Me.columnv_pst = MyBase.Columns("v_pst")
            Me.columnv_jbr = MyBase.Columns("v_jbr")
            Me.columnv_jkt = MyBase.Columns("v_jkt")
            Me.columnv_jatim = MyBase.Columns("v_jatim")
            Me.columnv_jateng = MyBase.Columns("v_jateng")
            Me.columnv_lmpng = MyBase.Columns("v_lmpng")
            Me.columnv_bntn = MyBase.Columns("v_bntn")
            Me.columnv_mdn = MyBase.Columns("v_mdn")
            Me.columnv_plmbng = MyBase.Columns("v_plmbng")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnpl_oid = New Global.System.Data.DataColumn("pl_oid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpl_oid)
            Me.columnpl_footer = New Global.System.Data.DataColumn("pl_footer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpl_footer)
            Me.columnpl_sign = New Global.System.Data.DataColumn("pl_sign", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpl_sign)
            Me.columnpl_number = New Global.System.Data.DataColumn("pl_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpl_number)
            Me.columnpls_oid = New Global.System.Data.DataColumn("pls_oid", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpls_oid)
            Me.columnpls_item = New Global.System.Data.DataColumn("pls_item", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpls_item)
            Me.columnpls_number = New Global.System.Data.DataColumn("pls_number", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpls_number)
            Me.columnpla_ac_id = New Global.System.Data.DataColumn("pla_ac_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpla_ac_id)
            Me.columnac_code = New Global.System.Data.DataColumn("ac_code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnac_code)
            Me.columnac_name = New Global.System.Data.DataColumn("ac_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnac_name)
            Me.columnpla_ac_hirarki = New Global.System.Data.DataColumn("pla_ac_hirarki", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpla_ac_hirarki)
            Me.columnv_pst = New Global.System.Data.DataColumn("v_pst", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnv_pst)
            Me.columnv_jbr = New Global.System.Data.DataColumn("v_jbr", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnv_jbr)
            Me.columnv_jkt = New Global.System.Data.DataColumn("v_jkt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnv_jkt)
            Me.columnv_jatim = New Global.System.Data.DataColumn("v_jatim", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnv_jatim)
            Me.columnv_jateng = New Global.System.Data.DataColumn("v_jateng", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnv_jateng)
            Me.columnv_lmpng = New Global.System.Data.DataColumn("v_lmpng", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnv_lmpng)
            Me.columnv_bntn = New Global.System.Data.DataColumn("v_bntn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnv_bntn)
            Me.columnv_mdn = New Global.System.Data.DataColumn("v_mdn", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnv_mdn)
            Me.columnv_plmbng = New Global.System.Data.DataColumn("v_plmbng", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnv_plmbng)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Newpl_setting_mstrRow() As pl_setting_mstrRow
            Return CType(Me.NewRow,pl_setting_mstrRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New pl_setting_mstrRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(pl_setting_mstrRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.pl_setting_mstrRowChangedEvent) Is Nothing) Then
                RaiseEvent pl_setting_mstrRowChanged(Me, New pl_setting_mstrRowChangeEvent(CType(e.Row,pl_setting_mstrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.pl_setting_mstrRowChangingEvent) Is Nothing) Then
                RaiseEvent pl_setting_mstrRowChanging(Me, New pl_setting_mstrRowChangeEvent(CType(e.Row,pl_setting_mstrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.pl_setting_mstrRowDeletedEvent) Is Nothing) Then
                RaiseEvent pl_setting_mstrRowDeleted(Me, New pl_setting_mstrRowChangeEvent(CType(e.Row,pl_setting_mstrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.pl_setting_mstrRowDeletingEvent) Is Nothing) Then
                RaiseEvent pl_setting_mstrRowDeleting(Me, New pl_setting_mstrRowChangeEvent(CType(e.Row,pl_setting_mstrRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Removepl_setting_mstrRow(ByVal row As pl_setting_mstrRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DS_profitdata = New DS_profitdata
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "pl_setting_mstrDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class pl_setting_mstrRow
        Inherits Global.System.Data.DataRow
        
        Private tablepl_setting_mstr As pl_setting_mstrDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablepl_setting_mstr = CType(Me.Table,pl_setting_mstrDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pl_oid() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.pl_oidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pl_oid' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.pl_oidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pl_footer() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.pl_footerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pl_footer' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.pl_footerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pl_sign() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.pl_signColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pl_sign' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.pl_signColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pl_number() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.pl_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pl_number' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.pl_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pls_oid() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.pls_oidColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pls_oid' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.pls_oidColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pls_item() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.pls_itemColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pls_item' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.pls_itemColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pls_number() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.pls_numberColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pls_number' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.pls_numberColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pla_ac_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.pla_ac_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pla_ac_id' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.pla_ac_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ac_code() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.ac_codeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ac_code' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.ac_codeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ac_name() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.ac_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ac_name' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.ac_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property pla_ac_hirarki() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.pla_ac_hirarkiColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'pla_ac_hirarki' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.pla_ac_hirarkiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property v_pst() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.v_pstColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'v_pst' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.v_pstColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property v_jbr() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.v_jbrColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'v_jbr' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.v_jbrColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property v_jkt() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.v_jktColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'v_jkt' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.v_jktColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property v_jatim() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.v_jatimColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'v_jatim' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.v_jatimColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property v_jateng() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.v_jatengColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'v_jateng' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.v_jatengColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property v_lmpng() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.v_lmpngColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'v_lmpng' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.v_lmpngColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property v_bntn() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.v_bntnColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'v_bntn' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.v_bntnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property v_mdn() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.v_mdnColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'v_mdn' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.v_mdnColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property v_plmbng() As String
            Get
                Try 
                    Return CType(Me(Me.tablepl_setting_mstr.v_plmbngColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'v_plmbng' in table 'pl_setting_mstr' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablepl_setting_mstr.v_plmbngColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispl_oidNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.pl_oidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpl_oidNull()
            Me(Me.tablepl_setting_mstr.pl_oidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispl_footerNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.pl_footerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpl_footerNull()
            Me(Me.tablepl_setting_mstr.pl_footerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispl_signNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.pl_signColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpl_signNull()
            Me(Me.tablepl_setting_mstr.pl_signColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispl_numberNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.pl_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpl_numberNull()
            Me(Me.tablepl_setting_mstr.pl_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispls_oidNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.pls_oidColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpls_oidNull()
            Me(Me.tablepl_setting_mstr.pls_oidColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispls_itemNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.pls_itemColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpls_itemNull()
            Me(Me.tablepl_setting_mstr.pls_itemColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispls_numberNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.pls_numberColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpls_numberNull()
            Me(Me.tablepl_setting_mstr.pls_numberColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispla_ac_idNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.pla_ac_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpla_ac_idNull()
            Me(Me.tablepl_setting_mstr.pla_ac_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isac_codeNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.ac_codeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setac_codeNull()
            Me(Me.tablepl_setting_mstr.ac_codeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isac_nameNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.ac_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setac_nameNull()
            Me(Me.tablepl_setting_mstr.ac_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Ispla_ac_hirarkiNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.pla_ac_hirarkiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setpla_ac_hirarkiNull()
            Me(Me.tablepl_setting_mstr.pla_ac_hirarkiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isv_pstNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.v_pstColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setv_pstNull()
            Me(Me.tablepl_setting_mstr.v_pstColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isv_jbrNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.v_jbrColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setv_jbrNull()
            Me(Me.tablepl_setting_mstr.v_jbrColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isv_jktNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.v_jktColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setv_jktNull()
            Me(Me.tablepl_setting_mstr.v_jktColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isv_jatimNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.v_jatimColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setv_jatimNull()
            Me(Me.tablepl_setting_mstr.v_jatimColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isv_jatengNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.v_jatengColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setv_jatengNull()
            Me(Me.tablepl_setting_mstr.v_jatengColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isv_lmpngNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.v_lmpngColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setv_lmpngNull()
            Me(Me.tablepl_setting_mstr.v_lmpngColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isv_bntnNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.v_bntnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setv_bntnNull()
            Me(Me.tablepl_setting_mstr.v_bntnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isv_mdnNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.v_mdnColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setv_mdnNull()
            Me(Me.tablepl_setting_mstr.v_mdnColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function Isv_plmbngNull() As Boolean
            Return Me.IsNull(Me.tablepl_setting_mstr.v_plmbngColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub Setv_plmbngNull()
            Me(Me.tablepl_setting_mstr.v_plmbngColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class pl_setting_mstrRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As pl_setting_mstrRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As pl_setting_mstrRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As pl_setting_mstrRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class
