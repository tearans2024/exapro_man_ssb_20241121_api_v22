<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Detail.Name" xml:space="preserve">
    <value>Detail</value>
  </metadata>
  <metadata name="XrTable2.Name" xml:space="preserve">
    <value>XrTable2</value>
  </metadata>
  <metadata name="XrTableRow2.Name" xml:space="preserve">
    <value>XrTableRow2</value>
  </metadata>
  <metadata name="XrTableCell4.Name" xml:space="preserve">
    <value>XrTableCell4</value>
  </metadata>
  <metadata name="XrTableCell8.Name" xml:space="preserve">
    <value>XrTableCell8</value>
  </metadata>
  <metadata name="XrTableCell15.Name" xml:space="preserve">
    <value>XrTableCell15</value>
  </metadata>
  <metadata name="XrTableCell5.Name" xml:space="preserve">
    <value>XrTableCell5</value>
  </metadata>
  <metadata name="XrTableCell10.Name" xml:space="preserve">
    <value>XrTableCell10</value>
  </metadata>
  <metadata name="XrTableCell6.Name" xml:space="preserve">
    <value>XrTableCell6</value>
  </metadata>
  <metadata name="XrTableCell12.Name" xml:space="preserve">
    <value>XrTableCell12</value>
  </metadata>
  <metadata name="XrTableCell13.Name" xml:space="preserve">
    <value>XrTableCell13</value>
  </metadata>
  <metadata name="PageHeader.Name" xml:space="preserve">
    <value>PageHeader</value>
  </metadata>
  <metadata name="PageFooter.Name" xml:space="preserve">
    <value>PageFooter</value>
  </metadata>
  <metadata name="XrLine3.Name" xml:space="preserve">
    <value>XrLine3</value>
  </metadata>
  <metadata name="OdbcSelectCommand1.DesignTimeVisible" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <metadata name="OdbcSelectCommand1.Name" xml:space="preserve">
    <value>OdbcSelectCommand1</value>
  </metadata>
  <metadata name="OdbcSelectCommand1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>0, 0</value>
  </metadata>
  <metadata name="OdbcSelectCommand1.CommandDesignTimeVisible" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <data name="OdbcSelectCommand1.CommandText" xml:space="preserve">
    <value>select en_desc,ptnr_code,ptnr_name, sum(dpp_2013) as dpp_1 , sum(dpp_2014) as dpp_2, sum(dpp_2015) as dpp_3 ,0.0 as persen_1 , 0.0 as persen_2   from ( SELECT      en_desc,   so_code,   so_date,   ptnr_mstr.ptnr_name,   ptnr_mstr.ptnr_code,   soship_code,   soship_date, to_char(soship_date,'yyyy') as date_periode,  si_desc,   soship_is_shipment,   soshipd_seq,   cu_name,   so_exc_rate,   pt_code,sod_cost,   pt_desc1,   pt_desc2,   sod_taxable,   sod_tax_inc,  sod_sales_unit,  (sod_sales_unit * (-1) * soshipd_qty) as sod_sales_unit_total,   tax_mstr.code_name as tax_name,   soshipd_qty * -1 as soshipd_qty,   sod_price,   soshipd_qty * -1 * sod_price as sales_ttl,   sod_disc,  soshipd_qty * -1 * sod_cost  as total_cost,   soshipd_qty * -1 * sod_price * sod_disc as disc_value,   case upper(sod_tax_inc)   when 'N' then (soshipd_qty * -1 * sod_price) - (soshipd_qty * -1 * sod_price * sod_disc)   when 'Y' then ((soshipd_qty * -1 * sod_price) * cast((100.0/110.0) as numeric(26,8))) - ((soshipd_qty * -1 * sod_price) * cast((100.0/110.0) as numeric(26,8)) * sod_disc)  end as dpp_2013, 0.0 as dpp_2014, 0.0 as dpp_2015,  ptnrg_name, sales_mstr.ptnr_name as sales_name,   pay_type.code_name as pay_type_desc,pi_desc, case when ptnr_mstr.ptnr_is_ps='Y' then 'PS' else 'NON PS' end as ps_status  FROM    public.soship_mstr   inner join soshipd_det on soshipd_soship_oid = soship_oid   inner join so_mstr on so_oid = soship_so_oid   inner join pi_mstr on so_pi_id = pi_id   inner join sod_det on sod_oid = soshipd_sod_oid  inner join ptnr_mstr sales_mstr on sales_mstr.ptnr_id = so_sales_person   inner join en_mstr on en_id = soship_en_id   inner join si_mstr on si_id = soship_si_id   inner join ptnr_mstr on ptnr_mstr.ptnr_id = so_ptnr_id_sold   inner join pt_mstr on pt_id = sod_pt_id   inner join code_mstr as um_mstr on um_mstr.code_id = soshipd_um   inner join loc_mstr on loc_id = soshipd_loc_id   inner join cu_mstr on cu_id = so_cu_id   inner join code_mstr as tax_mstr on tax_mstr.code_id = sod_tax_class   inner join code_mstr pay_type on pay_type.code_id = so_pay_type   left outer join code_mstr as reason_mstr on reason_mstr.code_id = soshipd_rea_code_id   left outer join ars_ship on ars_soshipd_oid = soshipd_oid   left outer join ptnrg_grp on ptnrg_grp.ptnrg_id = ptnr_mstr.ptnr_ptnrg_id   inner join pl_mstr on pl_id = pt_pl_id   where to_char(soship_date,'yyyy') = '2013'  and so_en_id in  (8) union all SELECT      en_desc,   so_code,   so_date,   ptnr_mstr.ptnr_name,   ptnr_mstr.ptnr_code,   soship_code,   soship_date, to_char(soship_date,'yyyy') as date_periode,  si_desc,   soship_is_shipment,   soshipd_seq,   cu_name,   so_exc_rate,   pt_code,sod_cost,   pt_desc1,   pt_desc2,   sod_taxable,   sod_tax_inc,  sod_sales_unit,  (sod_sales_unit * (-1) * soshipd_qty) as sod_sales_unit_total,   tax_mstr.code_name as tax_name,   soshipd_qty * -1 as soshipd_qty,   sod_price,   soshipd_qty * -1 * sod_price as sales_ttl,   sod_disc,  soshipd_qty * -1 * sod_cost  as total_cost,   soshipd_qty * -1 * sod_price * sod_disc as disc_value,   0.0 as dpp_2013, case upper(sod_tax_inc)   when 'N' then (soshipd_qty * -1 * sod_price) - (soshipd_qty * -1 * sod_price * sod_disc)   when 'Y' then ((soshipd_qty * -1 * sod_price) * cast((100.0/110.0) as numeric(26,8))) - ((soshipd_qty * -1 * sod_price) * cast((100.0/110.0) as numeric(26,8)) * sod_disc)  end as dpp_2014, 0.0 as dpp_2015,  ptnrg_name, sales_mstr.ptnr_name as sales_name,   pay_type.code_name as pay_type_desc,pi_desc, case when ptnr_mstr.ptnr_is_ps='Y' then 'PS' else 'NON PS' end as ps_status  FROM    public.soship_mstr   inner join soshipd_det on soshipd_soship_oid = soship_oid   inner join so_mstr on so_oid = soship_so_oid   inner join pi_mstr on so_pi_id = pi_id   inner join sod_det on sod_oid = soshipd_sod_oid  inner join ptnr_mstr sales_mstr on sales_mstr.ptnr_id = so_sales_person   inner join en_mstr on en_id = soship_en_id   inner join si_mstr on si_id = soship_si_id   inner join ptnr_mstr on ptnr_mstr.ptnr_id = so_ptnr_id_sold   inner join pt_mstr on pt_id = sod_pt_id   inner join code_mstr as um_mstr on um_mstr.code_id = soshipd_um   inner join loc_mstr on loc_id = soshipd_loc_id   inner join cu_mstr on cu_id = so_cu_id   inner join code_mstr as tax_mstr on tax_mstr.code_id = sod_tax_class   inner join code_mstr pay_type on pay_type.code_id = so_pay_type   left outer join code_mstr as reason_mstr on reason_mstr.code_id = soshipd_rea_code_id   left outer join ars_ship on ars_soshipd_oid = soshipd_oid   left outer join ptnrg_grp on ptnrg_grp.ptnrg_id = ptnr_mstr.ptnr_ptnrg_id   inner join pl_mstr on pl_id = pt_pl_id   where to_char(soship_date,'yyyy') = '2014'  and so_en_id in  (8) union all SELECT      en_desc,   so_code,   so_date,   ptnr_mstr.ptnr_name,   ptnr_mstr.ptnr_code,   soship_code,   soship_date, to_char(soship_date,'yyyy') as date_periode,  si_desc,   soship_is_shipment,   soshipd_seq,   cu_name,   so_exc_rate,   pt_code,sod_cost,   pt_desc1,   pt_desc2,   sod_taxable,   sod_tax_inc,  sod_sales_unit,  (sod_sales_unit * (-1) * soshipd_qty) as sod_sales_unit_total,   tax_mstr.code_name as tax_name,   soshipd_qty * -1 as soshipd_qty,   sod_price,   soshipd_qty * -1 * sod_price as sales_ttl,   sod_disc,  soshipd_qty * -1 * sod_cost  as total_cost,   soshipd_qty * -1 * sod_price * sod_disc as disc_value,   0.0 as dpp_2013, 0.0 as dpp_2014, case upper(sod_tax_inc)   when 'N' then (soshipd_qty * -1 * sod_price) - (soshipd_qty * -1 * sod_price * sod_disc)   when 'Y' then ((soshipd_qty * -1 * sod_price) * cast((100.0/110.0) as numeric(26,8))) - ((soshipd_qty * -1 * sod_price) * cast((100.0/110.0) as numeric(26,8)) * sod_disc)  end as dpp_2015,  ptnrg_name, sales_mstr.ptnr_name as sales_name,   pay_type.code_name as pay_type_desc,pi_desc, case when ptnr_mstr.ptnr_is_ps='Y' then 'PS' else 'NON PS' end as ps_status  FROM    public.soship_mstr   inner join soshipd_det on soshipd_soship_oid = soship_oid   inner join so_mstr on so_oid = soship_so_oid   inner join pi_mstr on so_pi_id = pi_id   inner join sod_det on sod_oid = soshipd_sod_oid  inner join ptnr_mstr sales_mstr on sales_mstr.ptnr_id = so_sales_person   inner join en_mstr on en_id = soship_en_id   inner join si_mstr on si_id = soship_si_id   inner join ptnr_mstr on ptnr_mstr.ptnr_id = so_ptnr_id_sold   inner join pt_mstr on pt_id = sod_pt_id   inner join code_mstr as um_mstr on um_mstr.code_id = soshipd_um   inner join loc_mstr on loc_id = soshipd_loc_id   inner join cu_mstr on cu_id = so_cu_id   inner join code_mstr as tax_mstr on tax_mstr.code_id = sod_tax_class   inner join code_mstr pay_type on pay_type.code_id = so_pay_type   left outer join code_mstr as reason_mstr on reason_mstr.code_id = soshipd_rea_code_id   left outer join ars_ship on ars_soshipd_oid = soshipd_oid   left outer join ptnrg_grp on ptnrg_grp.ptnrg_id = ptnr_mstr.ptnr_ptnrg_id   inner join pl_mstr on pl_id = pt_pl_id   where to_char(soship_date,'yyyy') = '2015'  and so_en_id in  (8) ) as temp group by en_desc,ptnr_code,ptnr_name</value>
  </data>
  <metadata name="OdbcConnection1.Name" xml:space="preserve">
    <value>OdbcConnection1</value>
  </metadata>
  <metadata name="OdbcConnection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>174, 17</value>
  </metadata>
  <data name="OdbcConnection1.ConnectionString" xml:space="preserve">
    <value>Dsn=sygma2;database=sygma_091014_new;server=localhost;port=5433;uid=postgres;sslmode=disable;readonly=0;protocol=7.4;fakeoidindex=0;showoidcolumn=0;rowversioning=0;showsystemtables=0;fetch=100;socket=4096;unknownsizes=0;maxvarcharsize=255;maxlongvarcharsize=8190;debug=0;commlog=0;optimizer=0;ksqo=1;usedeclarefetch=0;textaslongvarchar=1;unknownsaslongvarchar=0;boolsaschar=1;parse=0;cancelasfreestmt=0;extrasystableprefixes=dd_;lfconversion=1;updatablecursors=1;disallowpremature=0;trueisminus1=0;bi=0;byteaaslongvarbinary=0;useserversideprepare=0;lowercaseidentifier=0;xaopt=1</value>
  </data>
  <metadata name="OdbcDataAdapter1.Name" xml:space="preserve">
    <value>OdbcDataAdapter1</value>
  </metadata>
  <metadata name="OdbcDataAdapter1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="DsPerformaAgen1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>324, 17</value>
  </metadata>
  <metadata name="DsPerformaAgen1.Name" xml:space="preserve">
    <value>DsPerformaAgen1</value>
  </metadata>
  <metadata name="GroupHeader1.Name" xml:space="preserve">
    <value>GroupHeader1</value>
  </metadata>
  <metadata name="XrLabel1.Name" xml:space="preserve">
    <value>XrLabel1</value>
  </metadata>
  <metadata name="XrTable1.Name" xml:space="preserve">
    <value>XrTable1</value>
  </metadata>
  <metadata name="XrTableRow1.Name" xml:space="preserve">
    <value>XrTableRow1</value>
  </metadata>
  <metadata name="XrTableCell1.Name" xml:space="preserve">
    <value>XrTableCell1</value>
  </metadata>
  <metadata name="XrTableCell7.Name" xml:space="preserve">
    <value>XrTableCell7</value>
  </metadata>
  <metadata name="XrTableCell16.Name" xml:space="preserve">
    <value>XrTableCell16</value>
  </metadata>
  <metadata name="XrTableCell2.Name" xml:space="preserve">
    <value>XrTableCell2</value>
  </metadata>
  <metadata name="XrTableCell9.Name" xml:space="preserve">
    <value>XrTableCell9</value>
  </metadata>
  <metadata name="XrTableCell3.Name" xml:space="preserve">
    <value>XrTableCell3</value>
  </metadata>
  <metadata name="XrTableCell11.Name" xml:space="preserve">
    <value>XrTableCell11</value>
  </metadata>
  <metadata name="XrTableCell14.Name" xml:space="preserve">
    <value>XrTableCell14</value>
  </metadata>
  <metadata name="XrLine1.Name" xml:space="preserve">
    <value>XrLine1</value>
  </metadata>
  <metadata name="XrLine2.Name" xml:space="preserve">
    <value>XrLine2</value>
  </metadata>
  <metadata name="$this.Name" xml:space="preserve">
    <value>XrPerformaAgen</value>
  </metadata>
</root>